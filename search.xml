<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[PM2的安装和使用]]></title>
    <url>%2F2018%2F06%2F19%2FPM2%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8%2F</url>
    <content type="text"><![CDATA[PM2介绍&emsp;&emsp;PM2 is a process manager for the JavaScript runtime Node.js. In 2016, PM2 is ranked as the 82nd most popular JavaScript project on GitHub.&emsp;&emsp;PM2 or Process Manager 2, is an Open Source, production Node.js process manager helping Developers and Devops manage Node.js applications in production environment. In comparison with other process manager like Supervisord, Forever, Systemd, some key features of PM2 are automatic application load balancing, declarative application configuration, deployment system and monitoring.&emsp;&emsp;Started in 2013 by Alexandre Strzelewicz. The code source is hosted on GitHub and installable via Npm (software) “Npm (software)”).说明：本次安装环境为CentOS7上进行 PM2安装1.安装node首先，从Node.js官网下载对应平台的安装程序，网速慢的童鞋请移步国内镜像。 [root@www ~]# tar xf node-v10.3.0-linux-x64.tar.gz [root@www ~]# cd node-v10.3.0-linux-x64/ [root@www node-v10.3.0-linux-x64]# ls bin CHANGELOG.md include lib LICENSE README.md share [root@www node-v10.3.0-linux-x64]# 加入环境变量中： [root@www node-v10.3.0-linux-x64]# echo &quot;export PATH=/usr/local/node-v10.3.0-linux-x64/bin:$PATH&quot; &gt; /etc/profile.d/nodejs.sh [root@www node-v10.3.0-linux-x64]# source /etc/profile [root@www node-v10.3.0-linux-x64]# npm -v 6.1.0 [root@www node-v10.3.0-linux-x64]# 2.安装pm2通过上面node提供的npm进行安装 [root@www ~]# npm install pm2 -g 如图提示说明安装成功 PM2使用start [options] &lt;file|json|stdin|app_name|pm_id...&gt; 后台启动node.js应用 trigger &lt;proc_name&gt; &lt;action_name&gt; [params] 通过此命令触发操作流程？？ deploy &lt;file|environment&gt; 通过环境变量或配置文件发布node.js项目 startOrRestart &lt;json&gt; start or restart JSON file startOrReload &lt;json&gt; start or gracefully reload JSON file pid [app_name] 返回指定app的pid或返回所有的pid startOrGracefulReload &lt;json&gt; start or gracefully reload JSON file stop [options] &lt;id|name|all|json|stdin...&gt; 停止一个进程 (若要重新启动, 执行pm2 restart &lt;app&gt;) restart [options] &lt;id|name|all|json|stdin...&gt; 重启一个进程 scale &lt;app_name&gt; &lt;number&gt; 在集群模式中依赖总数增加或减少集群数量 snapshot snapshot PM2 memory profile &lt;command&gt; CPU的使用情况 reload &lt;name|all&gt; 重新加载进程 (注意这个只针对http/https的应用) gracefulReload &lt;name|all&gt; 优雅地重新加载一个进程. 发送&quot;shutdown&quot; 关闭所有的连接. id &lt;name&gt; 获取app的id delete &lt;name|id|script|all|json|stdin...&gt; 停止次进程并且冲pm2管理列表中删除此进程 sendSignal &lt;signal&gt; &lt;pm2_id|name&gt; 向目标进程发送一个系统signal ping ping pm2的后台进程 - 如果挂了 就重启 updatePM2 使用内存中的PM2更新内存中的 update updatePM2的别名 install|module:install [options] [module|git:/] 安装或者更新模块 (或者是模块的设置) 然后永久运行它 module:update &lt;module|git:/&gt; 更新模块并永久运行 module:generate [app_name] 在当前目录生成一个事例模块 uninstall|module:uninstall &lt;module&gt; 停止并卸载一个模块 publish|module:publish Publish the module you are currently on set [key] [value] sets the specified config &lt;key&gt; &lt;value&gt; multiset &lt;value&gt; multiset eg &quot;key1 val1 key2 val2 get [key] get value for &lt;key&gt; conf [key] [value] get / set module config values config &lt;key&gt; [value] get / set module config values unset &lt;key&gt; clears the specified config &lt;key&gt; report give a full pm2 report for https://github.com/Unitech/pm2/issues link|interact [options] [secret] [public] [name] linking action to keymetrics.io - command can be stop|info|delete|restart unlink linking action to keymetrics.io - command can be stop|info|delete|restart unmonitor [name] unmonitor target process monitor [name] monitor target process open open dashboard in browser register create an account on keymetrics login login to keymetrics and link current PM2 web launch a health API on 0.0.0.0:9615 dump|save dump all processes for resurrecting them later send &lt;pm_id&gt; &lt;line&gt; send stdin to &lt;pm_id&gt; attach &lt;pm_id&gt; [comman] attach stdin/stdout to application identified by &lt;pm_id&gt; resurrect resurrect previously dumped processes unstartup [platform] disable and clear auto startup - [platform]=systemd,upstart,launchd,rcd startup [platform] setup script for pm2 at boot - [platform]=systemd,upstart,launchd,rcd logrotate copy default logrotate configuration ecosystem|init [mode] generate a process conf file. (mode = null or simple) reset &lt;name|id|all&gt; reset counters for process describe &lt;id&gt; describe all parameters of a process id desc &lt;id&gt; (alias) describe all parameters of a process id info &lt;id&gt; (alias) describe all parameters of a process id show &lt;id&gt; (alias) describe all parameters of a process id list|ls list all processes l (alias) list all processes ps (alias) list all processes status (alias) list all processes jlist list all processes in JSON format prettylist print json in a prettified JSON monit launch termcaps monitoring imonit launch legacy termcaps monitoring dashboard|dash launch dashboard with monitoring and logs flush flush logs reloadLogs reload all logs logs [options] [id|name] stream logs file. Default stream all logs kill kill daemon pull &lt;name&gt; [commit_id] updates repository for a given app forward &lt;name&gt; updates repository to the next commit for a given app backward &lt;name&gt; downgrades repository to the previous commit for a given app gc force PM2 to trigger garbage collection deepUpdate performs a deep update of PM2 serve|expose [path] [port] serve a directory over http via port]]></content>
  </entry>
</search>
